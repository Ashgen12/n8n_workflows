{
  "name": "A Multi-Modal Telegram Support Bot with Gemini-2.5 flash and Supabase RAG",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "id": "2bcc338a-d519-42dd-bffd-9b5854b3a456",
      "name": "Telegram Trigger",
      "type": "n8n-nodes-base.telegramTrigger",
      "position": [
        1072,
        384
      ],
      "webhookId": "5dfaa8fa-e242-4581-9ba4-a8dd27fdb5cd",
      "typeVersion": 1.2,
      "credentials": {
        "telegramApi": {
          "id": "dazPwvq6d2XWk5Kj",
          "name": "Ash_Linkedin_Bot"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "ebc22166-b749-42c7-9d91-9fef170c6b65",
      "name": "Telegram",
      "type": "n8n-nodes-base.telegram",
      "position": [
        4080,
        656
      ],
      "webhookId": "3f88dafc-b70c-4241-9960-d02d8e5c76d4",
      "typeVersion": 1.2,
      "credentials": {
        "telegramApi": {
          "id": "dazPwvq6d2XWk5Kj",
          "name": "Ash_Linkedin_Bot"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.voice.file_id }}",
        "additionalFields": {}
      },
      "id": "343b5290-d805-4136-a609-b12025df5339",
      "name": "Download Audio",
      "type": "n8n-nodes-base.telegram",
      "position": [
        3040,
        384
      ],
      "webhookId": "d3e9d36d-6402-45d6-9f56-5886e616f9fa",
      "typeVersion": 1.2,
      "credentials": {
        "telegramApi": {
          "id": "dazPwvq6d2XWk5Kj",
          "name": "Ash_Linkedin_Bot"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.document.file_id }}",
        "additionalFields": {}
      },
      "id": "3def7806-cf50-4fc8-a2c6-ea966cd0bd4e",
      "name": "Download PDF",
      "type": "n8n-nodes-base.telegram",
      "position": [
        2832,
        944
      ],
      "webhookId": "c9a95ea8-9864-4bfe-9bc4-36ad917741ec",
      "typeVersion": 1.2,
      "credentials": {
        "telegramApi": {
          "id": "dazPwvq6d2XWk5Kj",
          "name": "Ash_Linkedin_Bot"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.document.file_id }}",
        "additionalFields": {}
      },
      "id": "29624835-cc63-489f-8913-ece65ecf46f2",
      "name": "Download Image",
      "type": "n8n-nodes-base.telegram",
      "position": [
        2384,
        1136
      ],
      "webhookId": "38d23405-f59b-4dbc-a69e-b1101e198908",
      "typeVersion": 1.2,
      "credentials": {
        "telegramApi": {
          "id": "dazPwvq6d2XWk5Kj",
          "name": "Ash_Linkedin_Bot"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "for (const item of items) {\n  if (item.binary && item.binary['data']) {\n    const fileName = item.binary['data'].fileName || '';\n    const lowerName = fileName.toLowerCase();\n\n    if (lowerName.endsWith('.png')) {\n      item.binary['data'].mimeType = 'image/png';\n    } else if (lowerName.endsWith('.jpg') || lowerName.endsWith('.jpeg')) {\n      item.binary['data'].mimeType = 'image/jpeg';\n    } else if (lowerName.endsWith('.webp')) {\n      item.binary['data'].mimeType = 'image/webp';\n    }\n  }\n}\nreturn items;\n\n\n\n\n"
      },
      "id": "11755226-785d-4719-9d75-d82518ed615b",
      "name": "Fix mimeType",
      "type": "n8n-nodes-base.code",
      "position": [
        2608,
        1136
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.photo[0].file_id }}",
        "additionalFields": {}
      },
      "id": "2d7fe3f6-d152-4b6d-8184-96f1073c73c6",
      "name": "Download Photo",
      "type": "n8n-nodes-base.telegram",
      "position": [
        2384,
        592
      ],
      "webhookId": "b4a21f4c-e6a6-4c83-9e8e-af73cb7cc96a",
      "typeVersion": 1.2,
      "credentials": {
        "telegramApi": {
          "id": "dazPwvq6d2XWk5Kj",
          "name": "Ash_Linkedin_Bot"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "for (const item of items) {\n  if (item.binary && item.binary['data']) {\n    const fileName = item.binary['data'].fileName || '';\n    const lowerName = fileName.toLowerCase();\n\n    if (lowerName.endsWith('.png')) {\n      item.binary['data'].mimeType = 'image/png';\n    } else if (lowerName.endsWith('.jpg') || lowerName.endsWith('.jpeg')) {\n      item.binary['data'].mimeType = 'image/jpeg';\n    } else if (lowerName.endsWith('.webp')) {\n      item.binary['data'].mimeType = 'image/webp';\n    } else if (lowerName.endsWith('.gif')) {\n      item.binary['data'].mimeType = 'image/gif';\n    }\n  }\n}\nreturn items;\n\n\n\n/** This is for jpeg. Delete later\nfor (const item of items) {\n  if (item.binary && item.binary['data']) {\n    item.binary['data'].mimeType = 'image/jpeg';\n  }\n}\nreturn items;\n**/\n\n"
      },
      "id": "802f819c-9d11-4720-a63f-0d3bada509bf",
      "name": "Fix mimeType1",
      "type": "n8n-nodes-base.code",
      "position": [
        2608,
        592
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "95deb83e-1d69-46b6-92e3-59e667d698fe",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              },
              "leftValue": "={{ $json.is_supported }}",
              "rightValue": ""
            },
            {
              "id": "5d9924b8-b8e7-4640-9675-8123e1562fa8",
              "operator": {
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "={{ $json.reason }}",
              "rightValue": "supported_file_type"
            }
          ]
        },
        "options": {}
      },
      "id": "74df7c06-f07f-4504-a246-33665d355d70",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "position": [
        1728,
        1232
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.document.file_id }}",
        "additionalFields": {}
      },
      "id": "531826bd-e8ab-4e56-9f56-4e0dd8847c2f",
      "name": "Download Spreadsheet",
      "type": "n8n-nodes-base.telegram",
      "position": [
        2832,
        1536
      ],
      "webhookId": "fa2ada79-935b-4ea4-9a0c-a452d13c7a0c",
      "typeVersion": 1.2,
      "credentials": {
        "telegramApi": {
          "id": "dazPwvq6d2XWk5Kj",
          "name": "Ash_Linkedin_Bot"
        }
      }
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "id": "6ffa7f95-c506-40ff-a320-f2b8b35db632",
      "name": "Extract from PDF",
      "type": "n8n-nodes-base.extractFromFile",
      "position": [
        3040,
        944
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "operation": "xlsx",
        "options": {}
      },
      "id": "795a57de-78c6-44e8-a89b-a45c354988c9",
      "name": "Extract from Spreadsheet",
      "type": "n8n-nodes-base.extractFromFile",
      "position": [
        3040,
        1536
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "operation": "sendChatAction",
        "chatId": "={{ $json.message.chat.id }}"
      },
      "id": "f567e9a4-e043-4431-b574-b217b4fa2656",
      "name": "Typing…",
      "type": "n8n-nodes-base.telegram",
      "position": [
        1280,
        272
      ],
      "webhookId": "412793ca-7cad-4a84-acea-98debbbfa2ac",
      "typeVersion": 1.2,
      "credentials": {
        "telegramApi": {
          "id": "dazPwvq6d2XWk5Kj",
          "name": "Ash_Linkedin_Bot"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const supportedExtensions = ['.jpg', '.jpeg', '.png', '.webp', '.pdf', '.doc', '.docx', '.xls', '.xlsx', '.json', '.xml'];\n\nreturn $input.all().map(item => {\n  // Try to extract file name from binary first, else fall back to message.document\n  const fileName = item.binary?.data?.fileName || item.json?.message?.document?.file_name || '';\n  const lowerName = fileName.toLowerCase();\n\n  const isSupported = supportedExtensions.some(ext => lowerName.endsWith(ext));\n\n  if (!isSupported) {\n    return {\n       json: {\n        is_supported: false,\n        reason: \"unsupported_file_type\",\n        message: '❌ The uploaded file type is not supported. Please submit one of the following formats: .jpg, jpeg, .png, .webp, .pdf, .doc, .docx, .xls, .xlsx, .json, .xml',\n        fileName: fileName || 'Unknown file'\n      }\n    };\n  }\n\n  // File is supported – pass it forward untouched\n  return {\n    ...item,\n    json: {\n      ...(item.json || {}),\n      is_supported: true,\n      reason: \"supported_file_type\"\n    }\n  };\n});\n"
      },
      "id": "67edb91b-880e-4542-88e7-fc7bde727a75",
      "name": "Supported Document File Types",
      "type": "n8n-nodes-base.code",
      "position": [
        1488,
        1216
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "jsCode": "const results = [];\nfor (const item of $input.all()) {\nconst fileName = item.json?.fileName || item.json?.message?.document?.file_name || '';\nconst ext = fileName.toLowerCase().split('.').pop();\n\nlet type = 'unknown';\nif (['jpg', 'jpeg', 'png', 'webp'].includes(ext)) {\ntype = 'image';\n} else if (['pdf'].includes(ext)) {\ntype = 'pdf';\n} else if (['doc', 'docx'].includes(ext)) {\ntype = 'word document';\n} else if (['xls', 'xlsx'].includes(ext)) {\ntype = 'spreadsheet';\n} else if (['json'].includes(ext)) {\ntype = 'json';\n} else if (['xml'].includes(ext)) {\ntype = 'xml file'\n}\nitem.json.fileTypeCategory = type;\nresults.push(item);\n}\nreturn results;\n"
      },
      "id": "5c13b643-22c6-49cb-9055-54826f49fd13",
      "name": "Group Similar Documents",
      "type": "n8n-nodes-base.code",
      "position": [
        1952,
        1440
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "fcb767ee-565e-4b56-a54e-6f97f739fc24",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": ""
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "Text"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "c1016c40-f8f2-4e08-8ec8-5cdb88f5c87a",
                    "operator": {
                      "type": "object",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "leftValue": "={{ $json.message.voice }}",
                    "rightValue": ""
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "Audio"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "4f28ab72-33ae-45fa-b3ba-51cefe600434",
                    "operator": {
                      "type": "array",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "leftValue": "={{ $json.message.photo }}",
                    "rightValue": ""
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "Photo"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "47b17a80-c23f-4b7c-9761-f045715334f4",
                    "operator": {
                      "type": "object",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "leftValue": "={{ $json.message.document }}",
                    "rightValue": ""
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "Document"
            }
          ]
        },
        "options": {}
      },
      "id": "1923a439-9f1c-4df1-9360-a41250e61931",
      "name": "Input Message Router",
      "type": "n8n-nodes-base.switch",
      "position": [
        1280,
        464
      ],
      "typeVersion": 3.2
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "b688a3fb-8070-4506-9c9d-526d74c2605b",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.fileTypeCategory }}",
                    "rightValue": "image"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "Image"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "157a49a2-d5fb-425d-bb23-6ac16bdc45a2",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.fileTypeCategory }}",
                    "rightValue": "pdf"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "PDF"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "41b0d6a4-89a7-4e3b-9e4a-00689def90aa",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.fileTypeCategory }}",
                    "rightValue": "word document"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "Word Document"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "478f9497-7fc8-46e9-b834-22c78bbc7b05",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.fileTypeCategory }}",
                    "rightValue": "spreadsheet"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "Spreadsheet"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "d90c32c0-9d28-40d1-b11c-4fa9a14b7df5",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.fileTypeCategory }}",
                    "rightValue": "json"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "JSON"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "4d4f7af7-ca8f-4a22-9af1-b3c93f51958f",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.fileTypeCategory }}",
                    "rightValue": "xml file"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "XML File"
            }
          ]
        },
        "options": {}
      },
      "id": "510a0800-4323-4372-9f8a-3b3c26d8a455",
      "name": "Document Router",
      "type": "n8n-nodes-base.switch",
      "position": [
        2160,
        1376
      ],
      "typeVersion": 3.2
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.document.file_id }}",
        "additionalFields": {}
      },
      "id": "8c04ffbb-9a63-4089-8877-c0c668eeabcc",
      "name": "Download JSON",
      "type": "n8n-nodes-base.telegram",
      "position": [
        2832,
        1744
      ],
      "webhookId": "a364075a-9edc-4624-b867-15710db87e8d",
      "typeVersion": 1.2,
      "credentials": {
        "telegramApi": {
          "id": "dazPwvq6d2XWk5Kj",
          "name": "Ash_Linkedin_Bot"
        }
      }
    },
    {
      "parameters": {
        "operation": "fromJson",
        "options": {}
      },
      "id": "06a353d1-1ead-4973-aeff-4991ae2ca29f",
      "name": "Extract from JSON",
      "type": "n8n-nodes-base.extractFromFile",
      "position": [
        3040,
        1744
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.document.file_id }}",
        "additionalFields": {}
      },
      "id": "376ab859-3a6a-4f2d-80da-f0ab8c5149f6",
      "name": "Download XML",
      "type": "n8n-nodes-base.telegram",
      "position": [
        2832,
        1936
      ],
      "webhookId": "db40435f-f201-4156-aa2d-9c5285dabbe4",
      "typeVersion": 1.2,
      "credentials": {
        "telegramApi": {
          "id": "dazPwvq6d2XWk5Kj",
          "name": "Ash_Linkedin_Bot"
        }
      }
    },
    {
      "parameters": {
        "operation": "xml",
        "options": {}
      },
      "id": "a4c890b7-d858-42aa-9e60-746ce6b6d17b",
      "name": "Extract from XML",
      "type": "n8n-nodes-base.extractFromFile",
      "position": [
        3040,
        1936
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.document.file_id }}",
        "additionalFields": {}
      },
      "id": "d91df63b-926b-43f5-9846-14cdde235b8d",
      "name": "Download Word Document",
      "type": "n8n-nodes-base.telegram",
      "position": [
        2384,
        1344
      ],
      "webhookId": "559f8f6c-743e-415a-bdbf-45360dd5f115",
      "typeVersion": 1.2,
      "credentials": {
        "telegramApi": {
          "id": "dazPwvq6d2XWk5Kj",
          "name": "Ash_Linkedin_Bot"
        }
      }
    },
    {
      "parameters": {
        "operation": "binaryToPropery",
        "options": {}
      },
      "id": "8a4fecf9-c50e-44ce-a4ce-c60713805f71",
      "name": "File to Base64",
      "type": "n8n-nodes-base.extractFromFile",
      "position": [
        2608,
        1344
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://v2.convertapi.com/convert/docx/to/txt",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer YOUR_API_KEY_HERE"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"Parameters\": [\n        {\n            \"Name\": \"File\",\n            \"FileValue\": {\n                \"Name\": \"{{ $('Download Word Document').item.binary.data.fileName }}\",\n                \"Data\": \"{{ $json.data }}\"\n            }\n        },\n        {\n            \"Name\": \"StoreFile\",\n            \"Value\": true\n        }\n    ]\n}",
        "options": {}
      },
      "id": "b40a6b1f-0a8e-4788-ae3a-17138cf5918e",
      "name": "Convert to text (convertapi.com)",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        2832,
        1344
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "url": "={{ $json.Files[0].Url }}",
        "options": {}
      },
      "id": "59fad9e4-dbfc-4f6b-bfad-156b821e78dd",
      "name": "Download Text",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        3040,
        1344
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "content": "\n\n## Requirement/Credentials\n1. Google drive API Key\n2. Telegram Bot Token. [Guide](https://docs.n8n.io/integrations/builtin/credentials/telegram/?utm_source=n8n_app&utm_medium=credential_settings&utm_campaign=create_new_credentials_modal)\n3. Gemini API Key.\n4. Supabase API Key + Environment.\n5. ConvertAPI Key.\n6. Cohere API Key\n6. Postgres API Key. Or you can use n8n default simple memory node.",
        "height": 260,
        "width": 620,
        "color": 4
      },
      "id": "9f4e250c-fb80-4b96-a9c6-d4fd47382985",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        368,
        1088
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## ⚙️ How It Works \n### 🔁 Message Routing\n1. **Telegram Trigger** captures the user message (Text, Image, Voice, Document)\n2. **Message Router** routes input by type using a Switch node\n3. Each type is handled separately:\n     - **Voice** → Translate recording to text (.ogg, .mp3)\n     - **Image** → Analyze image to text.\n     -  **Text** → Sent directly to AI Agent (.txt).\n     - **Document** → Parsed (e.g. .docx to .txt) accordingly.\n\n         #### 📎 Document Type Routing\n         Before routing documents by type, the **Supported  Document File Types** node first checks if the file extension is allowed. If not supported, it exits early with an error message — preventing unnecessary processing.\nSupported documents are then routed using the **Document Router** node, and converted to text for further processing.\n\n         #### Supported Document File Types\n         **.jpg**   **.jpeg**   **.png**   **.webp**   **.pdf**   **.doc**   **.docx**   **.xls**   **.xlsx**   **.json**   **.xml**.\n\n4. The text content is combined with stored memory and embedded knowledge using a **RAG** approach, enabling the AI to respond based on real uploaded data.\n   ### 🧠 RAG via Supabase\n   Uploaded documents are vectorized using OpenAI Embeddings. Embeddings are stored in Supabase with metadata. On new questions, the chatbot:\n   - Extracts question intent\n   - Queries Supabase for semantically similar chunks\n   - Injects them into the prompt for OpenAI. \n   - OpenAI generates a grounded response based on actual document content.\n\n5. Response is sent to the Telegram user with content awareness.",
        "height": 800,
        "width": 620
      },
      "id": "f38669dd-5f21-4bb6-9f4d-1768e629eb0e",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        368,
        240
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "ca3a50ef-8148-4bb7-810c-a14422791866",
      "name": "When clicking ‘Execute workflow’",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        1280,
        -368
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "1BNjCvmgunqKlaIL7IHnyRuJNQZEyucaP",
          "mode": "list",
          "cachedResultName": "Ashis_NPnet.pdf",
          "cachedResultUrl": "https://drive.google.com/file/d/1BNjCvmgunqKlaIL7IHnyRuJNQZEyucaP/view?usp=drivesdk"
        },
        "options": {}
      },
      "id": "5f8a25d8-a8bb-4b01-a7b0-7ad7d58ab0c9",
      "name": "Download file",
      "type": "n8n-nodes-base.googleDrive",
      "position": [
        1488,
        -368
      ],
      "typeVersion": 3,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "2kD74bGVt5bW6Ipv",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "dataType": "binary",
        "textSplittingMode": "custom",
        "options": {}
      },
      "id": "3020c220-4e42-4c80-8bc8-7b93bc9a56e6",
      "name": "Default Data Loader1",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "position": [
        1840,
        -144
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "cc3f97fa-842d-45ae-ac51-6def07bfed1e",
      "name": "Recursive Character Text Splitter1",
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "position": [
        1920,
        64
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "contextWindowLength": 3
      },
      "id": "3ecaba71-3c29-42dd-8440-cd5c574241b9",
      "name": "Postgres Chat Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "position": [
        3600,
        1264
      ],
      "typeVersion": 1.3,
      "credentials": {
        "postgres": {
          "id": "DEDXYXE4dNMzOgio",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "content": "## ⚙️ Before using the Telegram chatbot:\nManually run this workflow to import your **Knowledge base** from Google drive into **Supabase** with vector embeddings.\nThis enables the Telegram chatbot to answer your questions based on real content.",
        "height": 220,
        "width": 340,
        "color": 3
      },
      "id": "086a122b-ffa3-43d5-9551-a8a9888c4bba",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        720,
        -336
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "4d151254-2466-4c9b-9099-16f78cdf939f",
      "name": "Reranker Cohere",
      "type": "@n8n/n8n-nodes-langchain.rerankerCohere",
      "position": [
        3872,
        1472
      ],
      "typeVersion": 1,
      "credentials": {
        "cohereApi": {
          "id": "z1LNvhZtBpbXDG6M",
          "name": "CohereApi account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "74f774a8-e230-44fe-8d46-7a0ce7f34b42",
              "name": "text",
              "type": "string",
              "value": "={{ $json.message.text }}"
            }
          ]
        },
        "options": {}
      },
      "id": "744219e9-66ef-45da-8d7c-a216862aca43",
      "name": "Extract Text",
      "type": "n8n-nodes-base.set",
      "position": [
        3264,
        112
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5a6a5c34-c6bf-4d00-bb51-2ec5cd4af9e9",
              "name": "text",
              "type": "string",
              "value": "=Photo content: {{ $json.content }}\n\nPhoto caption: {{ $('Telegram Trigger').item.json.message.caption }}"
            }
          ]
        },
        "options": {}
      },
      "id": "76e0a4d6-8e34-4a87-9809-832c03d22097",
      "name": "Extract Text & Content",
      "type": "n8n-nodes-base.set",
      "position": [
        3040,
        592
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "cd3cb375-33a8-479e-b320-6d43e23c906e",
              "name": "text",
              "type": "string",
              "value": "={{ $json.message }}"
            }
          ]
        },
        "options": {}
      },
      "id": "c366d6dc-bcf0-4bf8-952e-e4565e198c3a",
      "name": "Extract Error Message",
      "type": "n8n-nodes-base.set",
      "position": [
        3264,
        736
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "35b5e034-cf94-499c-967c-1aeb4edf1b58",
              "name": "text",
              "type": "string",
              "value": "={{ $json }}"
            }
          ]
        },
        "options": {}
      },
      "id": "89aa2812-0952-4ab5-8e3c-63e9ee7b9128",
      "name": "Extract Text1",
      "type": "n8n-nodes-base.set",
      "position": [
        3264,
        1536
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d480f972-a046-4ff1-9d19-ac586c372cbd",
              "name": "text",
              "type": "string",
              "value": "={{ $json }}"
            }
          ]
        },
        "options": {}
      },
      "id": "5313c3b4-ecc9-47d0-a15d-33b4f7bb1b5b",
      "name": "Extract Text2",
      "type": "n8n-nodes-base.set",
      "position": [
        3264,
        1744
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f7d3f22b-cca6-4d5d-9e70-b4075e542979",
              "name": "text",
              "type": "string",
              "value": "={{ $json }}"
            }
          ]
        },
        "options": {}
      },
      "id": "676253d8-dc18-4915-9cff-8081bcb33f63",
      "name": "Extract Text3",
      "type": "n8n-nodes-base.set",
      "position": [
        3264,
        1936
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6bb76f62-7f3e-432d-9c96-4c1d1c3e15f1",
              "name": "text",
              "type": "string",
              "value": "={{ $json.text }}"
            }
          ]
        },
        "options": {}
      },
      "id": "c3807fa7-c537-4454-a2ac-baa8996d2808",
      "name": "Extract Text4",
      "type": "n8n-nodes-base.set",
      "position": [
        3264,
        944
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d26a3dd0-8bb2-4f25-9c7d-3542dc039861",
              "name": "text",
              "type": "string",
              "value": "={{ $json.data }}"
            }
          ]
        },
        "options": {}
      },
      "id": "428f828e-bef8-425a-90dc-b53ef786216e",
      "name": "Extract Text5",
      "type": "n8n-nodes-base.set",
      "position": [
        3264,
        1344
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": {
          "__rl": true,
          "value": "=documents",
          "mode": "id"
        },
        "options": {}
      },
      "id": "9fe5eac7-98a4-40d4-8896-5af7ea86a278",
      "name": "Add to Supabase Vector DB",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "position": [
        1728,
        -368
      ],
      "typeVersion": 1.3,
      "credentials": {
        "supabaseApi": {
          "id": "863oAV25IXn7pu0j",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.text }}",
        "options": {
          "systemMessage": ""
        }
      },
      "id": "e080e0a0-053a-4648-87cf-ac322b423280",
      "name": "Knowledge Base AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        3520,
        1040
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolDescription": "Retrieve information about Awake at the Wheel: Introducing NPNet for\nEnhanced Drowsiness Detection from the Supabase vector store.",
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "topK": 10,
        "useReranker": true,
        "options": {}
      },
      "id": "d5cf1a5a-a84d-491e-922e-ce1628ab08db",
      "name": "Supabase Vector Store Search",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "position": [
        3728,
        1264
      ],
      "typeVersion": 1.3,
      "credentials": {
        "supabaseApi": {
          "id": "863oAV25IXn7pu0j",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
      "typeVersion": 1,
      "position": [
        1680,
        -144
      ],
      "id": "c9426a97-6d59-4390-bfe3-d50fa93093f2",
      "name": "Embeddings Google Gemini",
      "credentials": {
        "googlePalmApi": {
          "id": "S9czSjF65DLm1fPs",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
      "typeVersion": 1,
      "position": [
        3712,
        1472
      ],
      "id": "24927854-3944-4d11-82fd-5a055971c073",
      "name": "Embeddings Google Gemini2",
      "credentials": {
        "googlePalmApi": {
          "id": "S9czSjF65DLm1fPs",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.5-pro",
          "mode": "list",
          "cachedResultName": "models/gemini-2.5-pro"
        },
        "text": "Describe the contents of this photo/image",
        "inputType": "binary",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        2816,
        592
      ],
      "id": "b66079e6-84ff-4084-a606-75e1c1329717",
      "name": "Photo to Text",
      "credentials": {
        "googlePalmApi": {
          "id": "S9czSjF65DLm1fPs",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.5-flash",
          "mode": "list",
          "cachedResultName": "models/gemini-2.5-flash"
        },
        "text": "Describe the contents of this photo/image",
        "inputType": "binary",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        2848,
        1136
      ],
      "id": "5b0cc2c2-2c62-457c-bcb2-e3ef2c90c416",
      "name": "Photo to Text1",
      "credentials": {
        "googlePalmApi": {
          "id": "S9czSjF65DLm1fPs",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "resource": "audio",
        "modelId": {
          "__rl": true,
          "value": "models/gemini-1.5-flash",
          "mode": "list",
          "cachedResultName": "models/gemini-1.5-flash"
        },
        "inputType": "binary",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        3296,
        432
      ],
      "id": "7d89dc68-cc50-4bf4-82be-adcf11be821c",
      "name": "Transcribe a recording",
      "credentials": {
        "googlePalmApi": {
          "id": "S9czSjF65DLm1fPs",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "text": "={{ $json.content.parts[0].text }}",
        "translateTo": "en"
      },
      "type": "n8n-nodes-base.googleTranslate",
      "typeVersion": 2,
      "position": [
        3568,
        480
      ],
      "id": "f0b427b5-f878-4b42-a49c-8716d870a785",
      "name": "Translate a language",
      "credentials": {
        "googleTranslateOAuth2Api": {
          "id": "i6iKdvukXzXpKt3V",
          "name": "Google Translate account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f4f187d4-f47c-40d0-913e-3a7d1dde2a09",
              "name": "text",
              "value": "={{ $json.translatedText }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3792,
        480
      ],
      "id": "5b08f047-9d4b-44b2-b529-4c45a6eafd00",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        3488,
        1232
      ],
      "id": "46f37d67-c144-4445-8a7f-16f745a2c19f",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "S9czSjF65DLm1fPs",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "If": {
      "main": [
        [
          {
            "node": "Group Similar Documents",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract Error Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram": {
      "main": [
        []
      ]
    },
    "Download PDF": {
      "main": [
        [
          {
            "node": "Extract from PDF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download XML": {
      "main": [
        [
          {
            "node": "Extract from XML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Text": {
      "main": [
        [
          {
            "node": "Knowledge Base AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fix mimeType": {
      "main": [
        [
          {
            "node": "Photo to Text1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download JSON": {
      "main": [
        [
          {
            "node": "Extract from JSON",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Text": {
      "main": [
        [
          {
            "node": "Extract Text5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download file": {
      "main": [
        [
          {
            "node": "Add to Supabase Vector DB",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Text1": {
      "main": [
        [
          {
            "node": "Knowledge Base AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Text2": {
      "main": [
        [
          {
            "node": "Knowledge Base AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Text3": {
      "main": [
        [
          {
            "node": "Knowledge Base AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Text4": {
      "main": [
        [
          {
            "node": "Knowledge Base AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Text5": {
      "main": [
        [
          {
            "node": "Knowledge Base AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fix mimeType1": {
      "main": [
        [
          {
            "node": "Photo to Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Audio": {
      "main": [
        [
          {
            "node": "Transcribe a recording",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Image": {
      "main": [
        [
          {
            "node": "Fix mimeType",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Photo": {
      "main": [
        [
          {
            "node": "Fix mimeType1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File to Base64": {
      "main": [
        [
          {
            "node": "Convert to text (convertapi.com)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Document Router": {
      "main": [
        [
          {
            "node": "Download Image",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Download PDF",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Download Word Document",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Download Spreadsheet",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Download JSON",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Download XML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Reranker Cohere": {
      "ai_reranker": [
        [
          {
            "node": "Supabase Vector Store Search",
            "type": "ai_reranker",
            "index": 0
          }
        ]
      ]
    },
    "Extract from PDF": {
      "main": [
        [
          {
            "node": "Extract Text4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from XML": {
      "main": [
        [
          {
            "node": "Extract Text3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Input Message Router",
            "type": "main",
            "index": 0
          },
          {
            "node": "Typing…",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from JSON": {
      "main": [
        [
          {
            "node": "Extract Text2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader1": {
      "ai_document": [
        [
          {
            "node": "Add to Supabase Vector DB",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Download Spreadsheet": {
      "main": [
        [
          {
            "node": "Extract from Spreadsheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Input Message Router": {
      "main": [
        [
          {
            "node": "Extract Text",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Download Audio",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Download Photo",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Supported Document File Types",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "Knowledge Base AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Extract Error Message": {
      "main": [
        [
          {
            "node": "Knowledge Base AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Word Document": {
      "main": [
        [
          {
            "node": "File to Base64",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Text & Content": {
      "main": [
        [
          {
            "node": "Knowledge Base AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Group Similar Documents": {
      "main": [
        [
          {
            "node": "Document Router",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Knowledge Base AI Agent": {
      "main": [
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from Spreadsheet": {
      "main": [
        [
          {
            "node": "Extract Text1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store Search": {
      "ai_tool": [
        [
          {
            "node": "Knowledge Base AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Supported Document File Types": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to text (convertapi.com)": {
      "main": [
        [
          {
            "node": "Download Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter1": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader1",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Download file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Google Gemini": {
      "ai_embedding": [
        [
          {
            "node": "Add to Supabase Vector DB",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Google Gemini2": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store Search",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Photo to Text": {
      "main": [
        [
          {
            "node": "Extract Text & Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Photo to Text1": {
      "main": [
        [
          {
            "node": "Extract Text & Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe a recording": {
      "main": [
        [
          {
            "node": "Translate a language",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Translate a language": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Knowledge Base AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Knowledge Base AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {},
  "versionId": "732a5cfd-9116-467e-8e52-a43179b2bd0b",
  "meta": {
    "templateId": "5589",
    "templateCredsSetupCompleted": true,
    "instanceId": "f4999ccf69c6c4199e1d310cf1185e72aabb1cb5acf648edd259c8d6b3150805"
  },
  "id": "ORJs2uyLkElFlQPS",
  "tags": []
}